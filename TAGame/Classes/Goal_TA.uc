/*******************************************************************************
 * Goal_TA generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib Â© 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
class Goal_TA extends ActorComponent_X
	native;
	
/** Defines the direction that this goal faces. If not set, assumes owner's rotation */
var() const Actor GoalOrientation;
var() const array<Actor> OverrideGoalIndicatorOrientations;
/** Team Number **/
var() byte TeamNum;
/** FX to play when goal scored */
var() FXActor_TA ScoreFX;
var() const string GoalIndicatorArchetype;
/** If true the goal will only accept balls coming from the direction opposite to its orientation. */
var() bool bOnlyGoalsFromDirection;
/** if true show Focus Extent in game */
var(AutoCam) bool bShowFocusExtent;
/** If goal has a direction it only accepts balls from, use this actors rotation */
var() const float GoalDirection;
/** How many points to award for this goal. */
var() int PointsToAward;
/** When using AutoCam if ball is with-in this extent then try to focus AutoCam on the Goal - Extent is in Local Goal Rotation */
var(AutoCam) vector AutoCamFocusExtent;
/** In Local goal space extent location offset from center */
var(AutoCam) _AITypes_TA GoalFocusLocationOffset;
/** Scorer must be in this radius from goal in order for autocam to attach */
var(AutoCam) float MaxGoalScorerAttachRadius;
/** Compare angle start when goal has been scored - in goal rotation eg. Vect(1,0,0) == Goal world rotation */
var(AutoCam) AICachedGoalInfo GoalScoredDotDirection;
/** The min dot angle required for player to be moving away from the goal in order to attach autocam onto player Range = -1 to 1 */
var(AutoCam) float MinAttachGoalToScorerDot;
var privatewrite transient vector Location;
var privatewrite transient vector Direction;
var privatewrite transient Rotator Rotation;
var privatewrite transient vector LocalMin;
var privatewrite transient vector LocalMax;
var privatewrite transient vector LocalExtent;

defaultproperties
{
	PointsToAward=1
	AutoCamFocusExtent=(x=2250.0,y=4250.0,z=4000.0)
	MaxGoalScorerAttachRadius=4000.0
	GoalScoredDotDirection=(x=1.0,y=0.0,z=0.0)
	MinAttachGoalToScorerDot=0.050
}

protected event BeginPlay()
{
	local Box ActorBox;
}