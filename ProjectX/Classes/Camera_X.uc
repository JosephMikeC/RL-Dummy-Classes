/*******************************************************************************
 * Camera_X generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib Â© 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
 class Camera_X extends Camera
 transient
 native;

struct native CameraKnockBase
{
 var() float BlendInTime;
 var() float BlendOutTime;
 var() float Falloff;
 var transient float Time;

 structdefaultproperties
 {
     BlendInTime=0.0
     BlendOutTime=0.0
     Falloff=1.0
     Time=0.0
 }
};

struct native LocationCameraKnock extends CameraKnockBase
{
 var() vector Amount;
};

struct native RotationCameraKnock extends CameraKnockBase
{
 var() Rotator Amount;
};

struct native CameraOrientation
{
 var vector Focus;
 var Rotator Rotation;
 var float Distance;
 var float FOV;
 var vector CalculatedLocation;

 structdefaultproperties
 {
     Focus=(X=0.0,Y=0.0,Z=0.0)
     Rotation=(Pitch=0,Yaw=0,Roll=0)
     Distance=0.0
     FOV=0.0
     CalculatedLocation=(X=0.0,Y=0.0,Z=0.0)
 }
};

struct VectorInterpRate
{
 var float MaxDistance;
 var float InterpRate;
 var float ForwardScale;
 var float BackwardScale;
 var float SideScale;
 var float UpDownScale;

 structdefaultproperties
 {
     MaxDistance=0.0
     InterpRate=0.0
     ForwardScale=1.0
     BackwardScale=1.0
     SideScale=1.0
     UpDownScale=1.0
 }
};

/** list of camera state we support by default */
var() array<CameraState_X> States;
var transient Rotator PCDeltaRotation;
var transient Rotator OldControllerRotation;
var transient vector PCDeltaLocation;
var transient vector OldControllerLocation;
var transient CameraOrientation PreProcessPOV;
var transient CameraOrientation PostProcessPOV;
var protected export editinline CameraStateBlender_X Blender;
var const transient vector ShakeLocationOffset;
var const transient Rotator ShakeRotationOffset;
var const transient float ShakeFOVOffset;
var private transient color StartFadeColor;
var private transient color EndFadeColor;
var transient vector ClipOffset;
var transient array<LocationCameraKnock> LocationKnocks;
var transient array<RotationCameraKnock> RotationKnocks;
var transient bool bDisableCameraShake;
var transient bool bSnapNextTransition;
