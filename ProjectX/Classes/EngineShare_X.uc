/*******************************************************************************
 * EngineShare_X generated by Eliot.UELib using UE Explorer.
 * Eliot.UELib Â© 2009-2015 Eliot van Uytfanghe. All rights reserved.
 * http://eliotvu.com
 *
 * All rights belong to their respective owners.
 *******************************************************************************/
 class EngineShare_X extends EngineShare
 transient
 native;

var export editinline bool TransientLog;
//var privatewrite transient OnlineGameDedicatedServer_X OnlineGame;
var() /*0x00000800-0x00000000*/ protected const string ArchetypeString_OnlineGame;
var() /*0x00000800-0x00000000*/ protected const string ArchetypeString_OnlineGameDedicatedServerOld;
var() /*0x00000800-0x00000000*/ protected const string ArchetypeString_OnlineGameDedicatedServer;
var() /*0x00000800-0x00000000*/ protected const string ArchetypeString_OnlineGameLanServer;
var transient bool bDisableSaving;
var const transient bool bIsShowingLoadmapMovie;
var() bool bUseServerMatchmaking;
var delegate<EventPreExit> __EventPreExit__Delegate;
var delegate<EventLoadingMovieClosed> __EventLoadingMovieClosed__Delegate;
var delegate<EventPreScriptsReloaded> __EventPreScriptsReloaded__Delegate;
var delegate<EventPostScriptsReloaded> __EventPostScriptsReloaded__Delegate;
var delegate<EventOnlineGameInitialized> __EventOnlineGameInitialized__Delegate;
var delegate<EventPreLoadMap> __EventPreLoadMap__Delegate;
var delegate<EventPostLoadMap> __EventPostLoadMap__Delegate;

delegate EventPreExit()
{
 //return;    
}

delegate EventLoadingMovieClosed()
{
 //return;    
}

delegate EventPreScriptsReloaded()
{
 //return;    
}

delegate EventPostScriptsReloaded()
{
 //return;    
}

delegate EventOnlineGameInitialized()
{
 //return;    
}

delegate EventPreLoadMap(string MapName)
{
 //return;    
}

delegate EventPostLoadMap()
{
 //return;    
}

// Export UEngineShare_X::execIsDedicatedServer(FFrame&, void* const)
native static final function bool IsDedicatedServer();

// Export UEngineShare_X::execIsLanServer(FFrame&, void* const)
native static final function bool IsLanServer();

/*
function InitOnlineGame(GetUtcTimeStamp NewOnlineSubsystem)
{
 // End:0x1F
 if(ParseCommandlineParam("noms"))
 {
     bUseServerMatchmaking = false;
 }
 // End:0xDB
 if(IsDedicatedServer())
 {
     // End:0x8A
     if(bUseServerMatchmaking)
     {
         // End:0x87
         if(Len(ArchetypeString_OnlineGameDedicatedServer) > 0)
         {
             OnlineGame = GetTextArchetype(class'OnlineGameDedicatedServer_X', ArchetypeString_OnlineGameDedicatedServer).NewInstance();
         }
     }
     // End:0xD8
     else
     {
         // End:0xD8
         if(Len(ArchetypeString_OnlineGameDedicatedServerOld) > 0)
         {
             OnlineGame = GetTextArchetype(class'OnlineGameDedicatedServerOld_X', ArchetypeString_OnlineGameDedicatedServerOld).NewInstance();
         }
     }
 }
 // End:0x187
 else
 {
     // End:0x139
     if(IsLanServer())
     {
         // End:0x136
         if(Len(ArchetypeString_OnlineGameLanServer) > 0)
         {
             OnlineGame = GetTextArchetype(class'OnlineGameLanServer_X', ArchetypeString_OnlineGameLanServer).NewInstance();
         }
     }
     // End:0x187
     else
     {
         // End:0x187
         if(Len(ArchetypeString_OnlineGame) > 0)
         {
             OnlineGame = GetTextArchetype(class'OnlineGame_X', ArchetypeString_OnlineGame).NewInstance();
         }
     }
 }
 // End:0x1D1
 if(OnlineGame != none)
 {
     OnlineGame.Init(NewOnlineSubsystem);
     EventOnlineGameInitialized();
 }
 //return;    
}

// Export UEngineShare_X::execParseCommandlineParam(FFrame&, void* const)
native static final function bool ParseCommandlineParam(string Param);

// Export UEngineShare_X::execParseCommandlineInt(FFrame&, void* const)
native static final function bool ParseCommandlineInt(string Param, out int OutValue);

// Export UEngineShare_X::execParseCommandlineFloat(FFrame&, void* const)
native static final function bool ParseCommandlineFloat(string Param, out float OutValue);

// Export UEngineShare_X::execParseCommandlineQWORD(FFrame&, void* const)
native static final function bool ParseCommandlineQWORD(string Param, out Qword OutValue);

// Export UEngineShare_X::execParseCommandlineString(FFrame&, void* const)
native static final function bool ParseCommandlineString(string Param, out string OutValue);

// Export UEngineShare_X::execCrash(FFrame&, void* const)
native static final function Crash();

simulated function PrintDebugInfo(DebugDrawer Drawer)
{
 local string S;

 super(Object).PrintDebugInfo(Drawer);
 //Drawer.DebugObject(string('OnlineGame'), OnlineGame);
 // End:0xA5
 foreach TransientLog.AllLogs(S)
 {
     Drawer.PrintProperty("Transient", S);        
 }    
 //return;    
}
*/